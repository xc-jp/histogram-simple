name: CI

on: push

jobs:

  nix-build:
    name: Nix build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
      - uses: cachix/cachix-action@v8
        with:
          name: jmc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build dependencies
        run: nix build -L '(import ./pkgs.nix).hsPkgs.shellFor {}'
      - name: Build histogram-simple
        run: nix build -L -f pkgs.nix hsPkgs.histogram-simple.checks
      - name: Build development tools
        run: nix build -L -f shell.nix

  stack-build:
    name: Stack ${{ matrix.resolver }} on ${{ matrix.os }} (${{ matrix.required }})
    strategy:
      fail-fast: false
      matrix:
        resolver: [ nightly, lts-16, lts-15, lts-14 ]
        os: [ macos-latest, ubuntu-latest ]
        required: [ required ]
        # include:
        #   - resolver: nightly
        #     os: ubuntu-latest
        #     required: optional
    continue-on-error: ${{ matrix.required == 'optional' }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        with:
          enable-stack: true
      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.stack
      #       .stack-work
      #     key: stack-cache-${{ matrix.os }}-${{ matrix.resolver }}-${{ hashFiles('**/*.cabal') }}
      - run: stack init --resolver ${{ matrix.resolver }}
      - run: stack build --resolver ${{ matrix.resolver }} --only-dependencies
      - run: stack build --resolver ${{ matrix.resolver }}
      - run: stack build --resolver ${{ matrix.resolver }} --haddock --test --bench --no-run-benchmarks

  cabal-build:
    name: Cabal GHC ${{ matrix.ghc }} on ${{ matrix.os }} (${{ matrix.required }})
    strategy:
      fail-fast: false
      matrix:
        ghc: [ '8.6.5', '8.8.3', '8.10.2' ]
        os: [ ubuntu-latest, macos-latest ]
        required: [ required ]
        include:
          - ghc: latest
            os: ubuntu-latest
            required: optional
    continue-on-error: ${{ matrix.required == 'optional' }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cabal
            dist-newstyle
          key: cabal-cache-${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal') }}
      - run: cabal new-build --only-dependencies
      - run: cabal new-build
      - run: cabal new-test --test-show-details=direct
